{"version":3,"sources":["components/jsx/Home.jsx","components/jsx/Header.jsx","components/jsx/Country.jsx","components/jsx/Compare.jsx","resources/covid.jpg","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","news","setNews","useEffect","get_news","a","Axios","news_source","filtered_news","data","articles","filter","article","date","Date","publishedAt","toLocaleString","weekday","day","month","year","author","content","description","console","log","id","map","className","title","href","url","source","name","Header","isOpen","setIsOpen","menuRef","useRef","navRef","current","style","display","to","exact","ref","onClick","Country","countryList","setCountryList","countryInfo","setCountryInfo","get_country","countries","get_country_info","e","selected_country","currentTarget","value","info","lastUpdate","prev","get_active","confirmed","recovered","deaths","onChange","c","alpha2code","country","toFixed","critical","Compare","setCountries","label","recoveries","active","render","setRender","get_all","all","set_data","code","index","find","width","height","options","maintainAspectRatio","responsive","scales","y","beginAtZero","stacked","grid","color","ticks","x","plugins","legend","labels","layout","padding","datasets","backgroundColor","beforeDraw","chart","ctx","canvas","getContext","save","globalCompositeOperation","fillStyle","fillRect","restore","App","src","background","alt","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70c32978.chunk.js","sourcesContent":["import \"../css/Home.css\"\r\nimport Axios from \"axios\"\r\nimport { useState, useEffect } from \"react\"\r\n\r\nconst Home = () => {\r\n    const [news, setNews] = useState([])\r\n\r\n    useEffect(() => {\r\n        get_news()\r\n    }, [])\r\n  \r\n      const get_news = async () => {\r\n          \r\n        const news_source = await Axios(`https://newsapi.org/v2/top-headlines?country=us&apiKey=ff9229831ed441c18195304b7a16cf18`)\r\n        \r\n      const filtered_news =  news_source.data.articles.filter(article => {\r\n          const date = new Date(article.publishedAt)\r\n            article.publishedAt = date.toLocaleString(\"default\", { weekday: \"short\", day: \"numeric\", month: \"short\", year: \"numeric\"})\r\n            if(!article.author) article.author = \"unknown\" \r\n           return article.content !== null && article.description !== null\r\n        })\r\n        setNews(filtered_news)\r\n        \r\n      }\r\n      console.log(news)\r\n    return (\r\n        <div id=\"home\">\r\n            <div id=\"news-container\">\r\n                {news ? news.map(article => {\r\n                    return  <div className=\"articles\">\r\n                                <h2>{article.title}</h2>\r\n                                <h5>{article.publishedAt}</h5>\r\n                                <h4>by: <span>{article.author}</span> - <a href={article.url}>{article.source.name}</a></h4>\r\n                            </div>\r\n                }) :null}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import \"../css/Header.css\"\r\nimport { FaBars, FaTimes } from \"react-icons/fa\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { useState, useRef, useEffect } from \"react\"\r\n\r\nconst Header = () => {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const menuRef = useRef(null)\r\n    const navRef = useRef(null)\r\n\r\n    const check_nav = () => {\r\n        console.log(navRef.current.className)\r\n        // console.log(menuRef.current.style.display)\r\n        if(navRef.current.className == \"open\") menuRef.current.style.display = \"none\"\r\n        else menuRef.current.style.display = \"block\"\r\n    }\r\n\r\n    useEffect(() => {\r\n        check_nav()\r\n    }, [isOpen])\r\n   \r\n    \r\n    return (\r\n        <>\r\n            <header>\r\n            <NavLink to=\"/\" exact className=\"navlink\"><h1>COVID-19 Stats &amp; global news</h1></NavLink>\r\n                <div ref={menuRef}>\r\n                    <FaBars className=\"menu-icon bars\" onClick={() => setIsOpen(!isOpen)}/>\r\n                </div>\r\n              \r\n                <nav ref={navRef} className={isOpen ? \"open\" : \"closed\"} >\r\n                    <FaTimes className=\"menu-icon times\"  onClick={() => setIsOpen(!isOpen)}/>\r\n                    <ul >\r\n                        <NavLink to=\"/country\" exact className=\"navlink\" onClick={() => setIsOpen(!isOpen)}><li>specific country</li></NavLink>\r\n                        <NavLink to=\"/countries\" exact className=\"navlink\" onClick={() => setIsOpen(!isOpen)}><li>compare countries</li></NavLink>\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import \"../css/Country.css\"\r\nimport { useState, useRef, useEffect } from \"react\"\r\nimport Axios from \"axios\"\r\n\r\n// for specific country\r\n//https://covid19-api.com/country/code?code=AF&format=json\r\n\r\n//get list of countries\r\n//https://covid19-api.com/help/countries?format=json\r\n\r\nconst Country = () => {\r\n    const [countryList, setCountryList] = useState()\r\n    const [countryInfo, setCountryInfo] = useState({})\r\n\r\n    useEffect(() => {\r\n        get_country()\r\n    }, [])\r\n\r\n    const get_country = async () => {\r\n        const countries = await Axios(\"https://covid19-api.com/help/countries?format=json\")\r\n        setCountryList(countries.data)\r\n    }\r\n\r\n    const get_country_info = async e => {\r\n        const selected_country = e.currentTarget.value\r\n        const info = await Axios(`https://covid19-api.com/country/code?code=${selected_country}&format=json`)\r\n        const lastUpdate = new Date(info.data[0].lastUpdate).toLocaleString(\"default\", { weekday: \"short\", day: \"numeric\", month: \"short\", year: \"numeric\"})\r\n        setCountryInfo(info.data[0])\r\n        setCountryInfo(prev => ({...prev, lastUpdate}))\r\n    }\r\n\r\n    \r\n\r\n    const get_active = () => countryInfo.confirmed ? countryInfo.confirmed - countryInfo.recovered - countryInfo.deaths : \"\"\r\n\r\n    const recovery_ratio = () => ((countryInfo.recovered / countryInfo.confirmed) * 100).toFixed(2)\r\n\r\n    const active_ratio = () => (get_active() / countryInfo.confirmed * 100).toFixed(2)\r\n\r\n    const critical_ratio = () => (countryInfo.critical / get_active() * 100).toFixed(2)\r\n\r\n    const death_ratio = () => (countryInfo.deaths / countryInfo.confirmed * 100).toFixed(2)\r\n\r\n\r\n    return (\r\n        <div id=\"country\">\r\n            <div>\r\n                <select name=\"countries\" id=\"select\" onChange={get_country_info}  className={countryList ? \"show-select\" : \"hide-select\"}>\r\n                    <option value=\"none\">select country</option>\r\n                   {countryList ? countryList.map(c => {\r\n                       return <option key={c.name} value={c.alpha2code}>{c.name}</option>\r\n                   }): null}\r\n                </select>\r\n\r\n            <table id=\"info-container\" className={countryInfo.confirmed ? \"show\" : \"hide\"} >\r\n                <thead>\r\n                    <tr>\r\n                        <th>category</th>\r\n                        <th>information</th>\r\n                        <th>ratio</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>country</td>\r\n                        <td>{countryInfo.country}</td>\r\n                        <td>N/A</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>last update</td>\r\n                        <td>{countryInfo.lastUpdate}</td>\r\n                        <td>N/A</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>confirmed</td>\r\n                        <td>{countryInfo.confirmed}</td>\r\n                        <td>N/A</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>recovered</td>\r\n                        <td>{countryInfo.recovered}</td>\r\n                        <td>{recovery_ratio()}%</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>active</td>\r\n                        <td>{get_active()}</td>\r\n                        <td>{active_ratio()}%</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>deaths</td>\r\n                        <td>{countryInfo.deaths}</td>\r\n                        <td>{death_ratio()}%</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>critical</td>\r\n                        <td>{countryInfo.critical}</td>\r\n                        <td>{critical_ratio()}%</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n               \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Country\r\n","import \"../css/Compare.css\"\r\nimport Axios from \"axios\"\r\nimport { Bar } from \"react-chartjs-2\"\r\nimport { useState, useEffect } from \"react\"\r\n\r\n\r\n//https://covid19-api.com/country/all?format=json\r\n\r\n\r\nconst Compare = () => {\r\n    const [countries, setCountries] = useState()\r\n    const [label, setLabel] = useState([])\r\n    const [recoveries, setRecoveries] = useState([])\r\n    const [active, setActive] = useState([])\r\n    const [critical, setCritical] = useState([])\r\n    const [deaths, setDeaths] = useState([])\r\n    const [render, setRender] = useState(false)\r\n\r\n    useEffect(() => {\r\n        get_all()\r\n    }, [])\r\n\r\n    const get_all = async () => {\r\n        const all = await Axios(\"https://covid19-api.com/country/all?format=json\")\r\n        setCountries(all.data)\r\n    }\r\n\r\n    const select_1 = e => set_data(e.currentTarget.value, 0)\r\n\r\n    const select_2 = e => set_data(e.currentTarget.value, 1)\r\n\r\n    const select_3 = e => set_data(e.currentTarget.value, 2)\r\n\r\n    const set_data = (code, index) => {\r\n        const country = countries.find(country => country.code === code)\r\n\r\n        const get_active = country.confirmed - country.recovered - country.deaths\r\n\r\n        label[index] = country.country\r\n        recoveries[index] = country.recovered\r\n        critical[index] = country.critical\r\n        deaths[index] = country.deaths\r\n        active[index] = get_active\r\n\r\n        setRender(!render)\r\n    }\r\n\r\n    const plugin = {\r\n        id: 'custom_canvas_background_color',\r\n        beforeDraw: (chart) => {\r\n          const ctx = chart.canvas.getContext('2d');\r\n          ctx.save();\r\n          ctx.globalCompositeOperation = 'destination-over';\r\n          ctx.fillStyle = 'rgba(95, 95, 95)';\r\n          ctx.fillRect(0, 0, chart.width, chart.height);\r\n          ctx.restore();\r\n        }\r\n      };\r\n   \r\n    return (\r\n        <div id=\"compare\">\r\n\r\n            <div id=\"country-select\">\r\n\r\n                {/* this is the first select */}\r\n\r\n                <select name=\"country-1\" id=\"country-1\" onChange={select_1}>\r\n                    <option value=\"select country\">select country</option>\r\n                    {countries ? countries.map(country => {\r\n                        return <option key={country.country} value={country.code}>{country.country}</option>\r\n                    }) : null}\r\n                </select>\r\n\r\n                    {/* this is the second select */}\r\n\r\n                <select name=\"country-2\" id=\"country-1\" onChange={select_2}>\r\n                    <option value=\"select country\">select country</option>\r\n                    {countries ? countries.map(country => {\r\n                        return <option key={country.country} value={country.code}>{country.country}</option>\r\n                    }) : null}\r\n                </select>\r\n\r\n\r\n\r\n                    {/* this is the third select */}\r\n                <select name=\"country-3\" id=\"country-1\" onChange={select_3}>\r\n                    <option value=\"select country\">select country</option>\r\n                    {countries ? countries.map(country => {\r\n                        return <option key={country.country} value={country.code}>{country.country}</option>\r\n                    }) : null}\r\n                </select>\r\n            </div>\r\n            <div id=\"bar\">\r\n                <Bar\r\n                width={800}\r\n                height={400}\r\n                options= {{\r\n                    maintainAspectRatio: false,\r\n                    responsive: true,\r\n                    scales: {\r\n                        y: {\r\n                            beginAtZero: true,\r\n                            stacked: true,\r\n                            grid: {\r\n                                color: \"rgb(255, 255, 255)\"\r\n                            },\r\n                            ticks: {\r\n                                color: \"rgb(255, 255, 255)\"\r\n                            }\r\n                           \r\n                        },\r\n                        x: {\r\n                            stacked: true,\r\n                            grid: {\r\n                                color: \"rgb(255, 255, 255)\"\r\n                            },\r\n                            ticks: {\r\n                                color: \"rgb(255, 255, 255)\"\r\n                            }\r\n                        }\r\n                    },\r\n                    plugins: {\r\n                        legend: {\r\n                            labels: {\r\n                                color: \"rgb(255, 255, 255)\"\r\n                            }\r\n                        }\r\n                    },\r\n                    layout: {\r\n                        padding: 20\r\n                    }\r\n                    \r\n                }}\r\n                data={{\r\n                    labels: label,\r\n                    datasets: [\r\n                        {\r\n                            label: \"recovered\",\r\n                            color: \"rgb(255, 255, 255)\",\r\n                            data: recoveries,\r\n                            backgroundColor: \"green\"\r\n                        },\r\n                        {\r\n                            label: \"active\",\r\n                            data: active,\r\n                            backgroundColor: \"yellow\"\r\n                        },\r\n                        {\r\n                            label: \"critical\",\r\n                            data: critical,\r\n                            backgroundColor: \"orange\"\r\n                        },\r\n                        {\r\n                            label: \"deaths\",\r\n                            data: deaths,\r\n                            backgroundColor: \"red\"\r\n                        }\r\n                    ]\r\n                }}\r\n                plugins={[plugin]}\r\n                \r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Compare\r\n","export default __webpack_public_path__ + \"static/media/covid.71dedf58.jpg\";","import './App.css';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\n\nimport Home from \"./components/jsx/Home\"\nimport Header from \"./components/jsx/Header\"\nimport Country from \"./components/jsx/Country\"\nimport Compare from \"./components/jsx/Compare\"\n\n\nimport background from \"./resources/covid.jpg\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <img id=\"background\" src={background} alt=\"\"/>\n        <Header/>\n        <Switch>\n          <Route path='/' exact component={Home}/>\n          <Route path='/country' exact component={Country}/>\n          <Route path='/countries' exact component={Compare}/>\n        </Switch>\n      </BrowserRouter>\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}